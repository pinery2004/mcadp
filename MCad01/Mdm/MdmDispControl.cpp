//==========================================================================================
//  Copyright (C) 2006-2008. K.Matsu. All rights reserved.
//
//  MODULE: MdDispControl.cpp
//
//		ウィンドウ
//
//
//  K.Matsu           01/06/08    Created.
//==========================================================================================
#include "stdafx.h"
#include "MsBasic.h"
#include "MlLog.h"
#include "MgDefine.h"
#include "MgPoint.h"
#include "MgRect.h"
#include "MgMat.h"

#include "MdModel.h"

namespace MC
{

//===========================================================================
//		テンポラリ表示
//
//		指定された図形情報のテンポラリ表示を行う。
//
MINT	MddDispTemp (
						MINT		i_ifPick,	// ピック可能フラグ
												//	0:ピックなし
												//	1:ピックあり
						MDID		i_idWin,	// 表示するウィンドウ
												//	0:全てのウィンドウ
												//	0以外:ウィンドウID
						MDFIG&		i_pFig,		// 図形情報
						MDID*		o_pidDisp	// 表示ＩＤ
				)
{
	return 0;
}

//
//===========================================================================
//		テンポラリ表示削除
//
//		指定されたテンポラリ表示を削除する。
//
MINT	MddEraseTemp (
						MDIDSET&	i_GidDisp	// 表示ＩＤセット
				)
{
	return 0;
}

//
//===========================================================================
//		ラバーバンドの表示
//
//		指定された図形情報のラバーバンド表示を行う。
//
//		ラバーバンド表示は、XORで表示を行う。
//		そのため、指定する図形情報の中で重なる線分があると（ウィンドウの視点から見た場合）
//		その線分が消えてしまう。
//		そのような図形情報をラバーバンド表示する場合は、重複チェックありを指定する必要が
//		ある。
//		ラバーバンド表示は、ワイヤーフレームによる表示のみで塗り潰しは不可。
//
MINT	MddDispRubberband (
						MDIDSET&	i_GidDisp,	// フラグ
												//	0:重複チェックなし
												//	1:重複チェックあり
						MDID		i_idWin,	// 表示するウィンドウ
												//	0:全てのウィンドウ
												//	0以外:ウィンドウID
						MDFIG&		i_pFig,		// 図形情報
						MDID*		o_pidDisp	// 表示ＩＤ
				)
{
	return 0;
}

//
//===========================================================================
//		ラバーバンドの表示削除
//
//		指定された図形情報のラバーバンド表示を行う。
//
//		指定されたラバーバンド表示を削除する。
//
MINT	MddEraseRubberband (
						MDID		i_idDisp	// 表示ＩＤ
				)
{
	return 0;
}

//
//===========================================================================
//		ラバーバンド遅延モードの問い合わせ
//
//		ラバーバンド遅延モードを問い合わせる。
//		ラバーバンド表示する場合には下記のように遅延モードを設定すること。
//
//		ex)
//
//		mode = DispControl:: GetRubberbandDelayMode (  )  // 遅延モードの問い合わせ
//
//		　while（・・） {
//		　if ( mode == 0 ) DispControl:: SetRubberbandDelayMode ( 1 )  // 遅延モード=ON
//		  Inp::PointSnap ( ・・・)
//		　DispControl:: DispRubberband (・・・)  // ラバーバンドの表示
//		　if ( mode == 0 ) DispControl:: SetRubberbandDelayMode ( 0 )  // 遅延モード=OFF
//
//		 }
//
MINT	MddGetRubberbandDelayMode ()			// 遅延モード
												//	0:off
												//　1:on
{
	return 0;
}

//
//===========================================================================
//		ラバーバンド遅延モードの設定
//
//		ラバーバンド遅延モードを設定する。
//
MINT	MddSetRubberbandDelayMode (
						MDID		i_idDisp	// 表示ＩＤ
				)
{
	return 0;
}

//
//===========================================================================
//		表示図形の取り出し
//
//		指定されたウィンドウに表示されているＤｐｒの図形を
//		そのウィンドウの視点系での座標値で得る。（２次元）
//
MINT	MddGetViewZukei (
						MDIDSET&	i_pGidDisp,	// ウィンドウＩＤ
						MDID		i_idDpr,	// 図形DPR
						MDFIG*		o_pFig		// 図形情報
				)
{
	return 0;
}

//
//===========================================================================
//		物の表示のON/OFFを設定する
//
//		指定されたウィンドウに表示されている図形Ｄｐｒの表示ＯＮ／ＯＦＦを設定する。
//
//		　この関数ではＯＮ／ＯＦＦを設定するだけなので、画面に反映したい場合は、
//		　Window::Refresh　を呼ぶ必要がある。
//
//		※注意
//		現状の「あ！動く図面」の窓、扉以外のレイヤーでは、アクソメ、透視図、立面等の
//		3次元ウィンドウの表示情報を共有にしている。そのため上記レイヤーを３次元ウィンドウに
//		指定すると、３次元ウィンドウ全て共通に作用する。
//
MINT	MddSetDprDispMode (
						MDID		i_idWin,	// ウィンドウＩＤ
						MDID		i_idLyr,	// レイヤーKer
						MDID		i_idDpr,	// 図形Dpr
						MINT		i_ifDisp	// 表示フラグ
												//　0:表示OFF
												//　1:表示ON
				)
{
	return 0;
}

//
//===========================================================================
//		ウィンドウ範囲に含まれるレイヤー一覧を得る
//
//		指定されたウィンドウ範囲に含まれる表示されている物のレイヤー一覧を得る。
//
//		※ウィンドウ範囲より若干大きめの範囲を保持しているため、実際の表示されている物より
//		多めのリストが返ることがある。
//
//		※表示されている物（Dpr）はこの関数で得られたレイヤーを指定して、
//		GetDprList　から得る。
//
MINT	MddGetLyrList (
						MDID		i_idWin,	// ウィンドウＩＤ
						MDIDSET*	o_pGidLyr	// レイヤーKer
				)
{
	return 0;
}

//
//===========================================================================
//		ウィンドウ範囲に含まれる物一覧を得る
//
//		指定されたウィンドウ範囲に含まれ、指定されたレイヤーに属する、
//		表示されている物の一覧を得る。
//
//		※ウィンドウ範囲より若干大きめの範囲を保持しているため、
//		実際の表示されている物より多めのリストが返ることがある。
//
//		※指定するレイヤーは、GetLyrList　から得る。
//
MINT	MddGetDprList (
						MDID		i_idWin,	// ウィンドウＩＤ
						MDID		i_idLyr,	// レイヤーKer
						MDFIG*		o_pFig		// 図形Dpr

				)
{
	return 0;
}

//
//===========================================================================
//		指定図形の視点系でのＢＯＸ情報を得る
//
//		指定されたウィンドウでの図形DprのBOXを得る。
//
MINT	MddGetBoxDpr (
						MDID		i_idWin,	// ウィンドウＩＤ
						MDID		i_idLyr,	// レイヤーKer
						MDFIG*		o_pFig,		// 図形Dpr
						MgRect3*	o_pRect		// BOX（左下点、右上点）
												// （指定されたウィンドウの視点座標系での座標値）
				)
{
	return 0;
}

//
//===========================================================================
//		指定されたウィンドウの表示物全体の視点系でのＢＯＸを得る
//
//		指定されたウィンドウでの図形DprのBOXを得る。
//
MINT	MddGetBoxAllDpr (
						MDID		i_idWin,	// ウィンドウＩＤ
						MgRect3*	o_pRect		// BOX（左下点、右上点）
												// （指定されたウィンドウの視点座標系での座標値）
				)
{
	return 0;
}

} // namespace MC